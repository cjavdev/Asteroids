{"version":3,"sources":["moving_object.js","asteroid.js","ship.js","bullet.js","game.js","game_ui.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AChDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACpvfile":"all.js","sourcesContent":["class MovingObject {\n  constructor(position) {\n    this.x = position.x;\n    this.y = position.y;\n  }\n\n  wrap() {\n    if (this.x > AG.canvasMaxX) {\n      this.x = 0;\n    } else if (this.y > AG.canvasMaxY) {\n      this.y = 0;\n    } else if (this.x < 1) {\n      this.x = AG.canvasMaxX;\n    } else if (this.y < 1) {\n      this.y = AG.canvasMaxY;\n    }\n  }\n\n  wrapIfOffScreen() {\n    if(this.offScreen()) {\n      this.wrap();\n    }\n  }\n\n  update(velocity) {\n    this.x += velocity.x;\n    this.y += velocity.y;\n  }\n\n  offScreen() {\n    return this.x > AG.canvasMaxX || this.y > AG.canvasMaxY || this.x < 0 || this.y < 0;\n  }\n\n  draw(ctx) {\n    ctx.beginPath();\n    ctx.arc(this.x, this.y, this.radius, 0, 2 * Math.PI);\n    ctx.fillStyle = this.color;\n    ctx.fill();\n  }\n\n  colidedWith(other) {\n    var distance, xSquared, ySquared;\n    xSquared = Math.pow((other.x - this.x), 2);\n    ySquared = Math.pow((other.y - this.y), 2);\n    distance = Math.sqrt(xSquared + ySquared);\n    if (distance < (other.radius + this.radius)) {\n      return true;\n    }\n    return false;\n  }\n}\n","class Asteroid extends MovingObject {\n  constructor(position, radius, direction) {\n    this.radius = radius;\n    this.direction = direction;\n    this.color = 'grey';\n\n    super(position);\n  }\n\n  update () {\n    super.update(this.direction);\n  }\n\n  isHit(bullets) {\n    for(var bullet of bullets) {\n      if(this.colidedWith(bullet)) {\n        return true;\n      }\n    }\n    return false;\n  }\n}\n\nAsteroid.randomAsteroid = function () {\n  var position = {\n    x: Math.floor(Math.random() * AG.canvasMaxX + 1),\n    y: Math.floor(Math.random() * AG.canvasMaxX + 1),\n  };\n  var direction = {\n    x: randomBetween(-10, 10),\n    y: randomBetween(-10, 10)\n  };\n  return new Asteroid(position, randomBetween(5, 25), direction);\n};\n","class Ship extends MovingObject {\n  constructor(position, height, width, imgPath) {\n    this.height = height;\n    this.width = width;\n    this.velocity = {\n      x: 0,\n      y: 0\n    };\n    this.installImage(imgPath);\n\n    super(position);\n  }\n\n  center() {\n    return {\n      x: (this.x + this.height / 2),\n      y: (this.y + this.width / 2)\n    };\n  }\n\n  draw(ctx) {\n    ctx.beginPath();\n    ctx.drawImage(this.image, this.x, this.y, this.height, this.width);\n  }\n\n  installImage(path) {\n    this.image = new Image();\n    if(path === undefined) {\n      this.image.src = \"img/spaceship.png\";\n    } else {\n      this.image.src = path;\n    }\n  }\n\n  isHit(asteroids) {\n    var distance, xSquared, ySquared;\n    for(var asteroid of asteroids) {\n      xSquared = Math.pow((asteroid.x - this.center().x), 2);\n      ySquared = Math.pow((asteroid.y - this.center().y), 2);\n      distance = Math.sqrt(xSquared + ySquared);\n      if (distance < (asteroid.radius + this.height / 2)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  update() {\n    this.x += this.velocity.x;\n    this.y += this.velocity.y;\n\n    if (this.velocity.x !== 0) {\n      this.velocity.x < 0 ? this.velocity.x++ : this.velocity.x--;\n    }\n    if (this.velocity.y !== 0) {\n      this.velocity.y < 0 ? this.velocity.y++ : this.velocity.y--;\n    }\n  }\n\n  power(dx, dy) {\n    if (this.velocity.x + dx >= -10 && this.velocity.x + dx <= 10) {\n      this.velocity.x += dx;\n    }\n    if (this.velocity.y + dy >= -10 && this.velocity.y + dy <= 10) {\n      this.velocity.y += dy;\n    }\n  }\n\n  fireBullet(game) {\n    var bullet = new Bullet({\n      x: this.center().x,\n      y: this.center().y\n    }, {\n      x: this.velocity.x,\n      y: this.velocity.y\n    }, 3, 2, game);\n  }\n}\n","class Bullet extends MovingObject {\n  constructor(position, direction, speed, radius, game) {\n    this.direction = direction;\n    this.speed = speed;\n    this.radius = radius;\n    this.color = 'red';\n\n    game.bullets.push(this);\n    super(position);\n  }\n\n  update() {\n    var [x, y] = [this.direction.x, this.direction.y];\n\n    while (x === 0 && y === 0) {\n      this.direction.y = Math.floor(Math.random() * (2 + 1) - 1);\n      this.direction.x = Math.floor(Math.random() * (2 + 1) - 1);\n      [x, y] = [this.direction.x, this.direction.y];\n    }\n\n    this.x += x * this.speed;\n    this.y += y * this.speed;\n  }\n}\n","class Game {\n  constructor(context) {\n    this.context = context;\n    this.asteroids = [];\n    this.bullets = [];\n\n    AG.canvasMaxX = context.canvas.width;\n    AG.canvasMaxY = context.canvas.height;\n\n    this.ship = new Ship({\n      x: (AG.canvasMaxX / 2),\n      y: (AG.canvasMaxY / 2)\n    }, 50, 50);\n\n    for (var i = 0; i < 10; i++) {\n      this.asteroids.push(Asteroid.randomAsteroid());\n    }\n  }\n\n  draw() {\n    this.ship.draw(this.context);\n\n    for (var asteroid of this.asteroids) {\n      asteroid.draw(this.context);\n    }\n    for (var bullet of this.bullets) {\n      bullet.draw(this.context);\n    }\n  }\n\n  trySplitAsteroid(asteroid) {\n    if (asteroid.radius > 10) {\n      this.asteroids.push(new Asteroid({\n        x: asteroid.x,\n        y: asteroid.y\n      }, asteroid.radius / 2, {\n        x: randomBetween(-10, 10),\n        y: randomBetween(-10, 10)\n      }));\n      this.asteroids.push(new Asteroid({\n        x: asteroid.x,\n        y: asteroid.y\n      }, asteroid.radius / 2, {\n        x: randomBetween(-10, 10),\n        y: randomBetween(-10, 10)\n      }));\n    }\n  }\n\n  update() {\n    for (var asteroid of this.asteroids) {\n      asteroid.wrapIfOffScreen();\n      asteroid.update();\n\n      if (asteroid.isHit(this.bullets)) {\n        this.trySplitAsteroid(asteroid);\n        this.asteroids.splice(this.asteroids.indexOf(asteroid), 1);\n      }\n    }\n\n    for (var bullet of this.bullets) {\n      bullet.update();\n      if (bullet.offScreen()) {\n        this.bullets.splice(this.bullets.indexOf(bullet), 1);\n      }\n    }\n\n    this.ship.update();\n  }\n\n  start() {\n    var timer = setInterval(() => {\n      this.context.clearRect(0, 0, AG.canvasMaxX, AG.canvasMaxY);\n      this.update();\n      this.ship.wrapIfOffScreen();\n\n      if (this.ship.isHit(this.asteroids)) {\n        alert(\"BOOM!\");\n        clearInterval(timer);\n      }\n\n      this.draw();\n    }, 100);\n  }\n}\n","$(function () {\n  var canvas = document.getElementById('space'),\n    context = canvas.getContext('2d'),\n    game = new Game(context);\n\n  key('left', function () {\n    game.ship.power(-1, 0);\n  });\n  key('right', function () {\n    game.ship.power(1, 0);\n  });\n  key('up', function () {\n    game.ship.power(0, -1);\n  });\n  key('down', function () {\n    game.ship.power(0, 1);\n  });\n  key('space', function () {\n    game.ship.fireBullet(game);\n  });\n\n  game.start();\n});\n"],"sourceRoot":"/source/"}